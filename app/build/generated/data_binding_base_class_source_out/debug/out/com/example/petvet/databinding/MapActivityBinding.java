// Generated by view binder compiler. Do not edit!
package com.example.petvet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.petvet.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MapActivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btRequestService;

  @NonNull
  public final FragmentContainerView map;

  @NonNull
  public final FrameLayout mapFrame;

  @NonNull
  public final RelativeLayout relDist;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final TextView tvAddCategory;

  @NonNull
  public final TextView tvAddPrice;

  @NonNull
  public final TextView tvAddService;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvDistance;

  @NonNull
  public final TextView tvDistance2;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvService;

  private MapActivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btRequestService, @NonNull FragmentContainerView map,
      @NonNull FrameLayout mapFrame, @NonNull RelativeLayout relDist,
      @NonNull RelativeLayout relativeLayout, @NonNull TextView tvAddCategory,
      @NonNull TextView tvAddPrice, @NonNull TextView tvAddService, @NonNull TextView tvCategory,
      @NonNull TextView tvDistance, @NonNull TextView tvDistance2, @NonNull TextView tvPrice,
      @NonNull TextView tvService) {
    this.rootView = rootView;
    this.btRequestService = btRequestService;
    this.map = map;
    this.mapFrame = mapFrame;
    this.relDist = relDist;
    this.relativeLayout = relativeLayout;
    this.tvAddCategory = tvAddCategory;
    this.tvAddPrice = tvAddPrice;
    this.tvAddService = tvAddService;
    this.tvCategory = tvCategory;
    this.tvDistance = tvDistance;
    this.tvDistance2 = tvDistance2;
    this.tvPrice = tvPrice;
    this.tvService = tvService;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MapActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MapActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.map_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MapActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btRequestService;
      MaterialButton btRequestService = ViewBindings.findChildViewById(rootView, id);
      if (btRequestService == null) {
        break missingId;
      }

      id = R.id.map;
      FragmentContainerView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      id = R.id.mapFrame;
      FrameLayout mapFrame = ViewBindings.findChildViewById(rootView, id);
      if (mapFrame == null) {
        break missingId;
      }

      id = R.id.relDist;
      RelativeLayout relDist = ViewBindings.findChildViewById(rootView, id);
      if (relDist == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.tvAddCategory;
      TextView tvAddCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvAddCategory == null) {
        break missingId;
      }

      id = R.id.tvAddPrice;
      TextView tvAddPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvAddPrice == null) {
        break missingId;
      }

      id = R.id.tvAddService;
      TextView tvAddService = ViewBindings.findChildViewById(rootView, id);
      if (tvAddService == null) {
        break missingId;
      }

      id = R.id.tvCategory;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tvDistance;
      TextView tvDistance = ViewBindings.findChildViewById(rootView, id);
      if (tvDistance == null) {
        break missingId;
      }

      id = R.id.tvDistance2;
      TextView tvDistance2 = ViewBindings.findChildViewById(rootView, id);
      if (tvDistance2 == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvService;
      TextView tvService = ViewBindings.findChildViewById(rootView, id);
      if (tvService == null) {
        break missingId;
      }

      return new MapActivityBinding((ConstraintLayout) rootView, btRequestService, map, mapFrame,
          relDist, relativeLayout, tvAddCategory, tvAddPrice, tvAddService, tvCategory, tvDistance,
          tvDistance2, tvPrice, tvService);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
