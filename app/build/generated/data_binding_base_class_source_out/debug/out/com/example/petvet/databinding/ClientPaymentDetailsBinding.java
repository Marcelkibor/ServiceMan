// Generated by view binder compiler. Do not edit!
package com.example.petvet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.petvet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ClientPaymentDetailsBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final ImageView backArrow;

  @NonNull
  public final CardView cardCategories;

  @NonNull
  public final CardView cardHeaders;

  @NonNull
  public final TextView greetingText;

  @NonNull
  public final TextView tvAmount;

  @NonNull
  public final TextView tvAmountDesc;

  @NonNull
  public final TextView tvPayment;

  @NonNull
  public final TextView tvPaymentId;

  @NonNull
  public final TextView tvServiceId;

  @NonNull
  public final TextView tvServiceIdDesc;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvTimeDesc;

  private ClientPaymentDetailsBinding(@NonNull DrawerLayout rootView, @NonNull ImageView backArrow,
      @NonNull CardView cardCategories, @NonNull CardView cardHeaders,
      @NonNull TextView greetingText, @NonNull TextView tvAmount, @NonNull TextView tvAmountDesc,
      @NonNull TextView tvPayment, @NonNull TextView tvPaymentId, @NonNull TextView tvServiceId,
      @NonNull TextView tvServiceIdDesc, @NonNull TextView tvTime, @NonNull TextView tvTimeDesc) {
    this.rootView = rootView;
    this.backArrow = backArrow;
    this.cardCategories = cardCategories;
    this.cardHeaders = cardHeaders;
    this.greetingText = greetingText;
    this.tvAmount = tvAmount;
    this.tvAmountDesc = tvAmountDesc;
    this.tvPayment = tvPayment;
    this.tvPaymentId = tvPaymentId;
    this.tvServiceId = tvServiceId;
    this.tvServiceIdDesc = tvServiceIdDesc;
    this.tvTime = tvTime;
    this.tvTimeDesc = tvTimeDesc;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ClientPaymentDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ClientPaymentDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.client_payment_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ClientPaymentDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backArrow;
      ImageView backArrow = ViewBindings.findChildViewById(rootView, id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.cardCategories;
      CardView cardCategories = ViewBindings.findChildViewById(rootView, id);
      if (cardCategories == null) {
        break missingId;
      }

      id = R.id.cardHeaders;
      CardView cardHeaders = ViewBindings.findChildViewById(rootView, id);
      if (cardHeaders == null) {
        break missingId;
      }

      id = R.id.greetingText;
      TextView greetingText = ViewBindings.findChildViewById(rootView, id);
      if (greetingText == null) {
        break missingId;
      }

      id = R.id.tvAmount;
      TextView tvAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvAmount == null) {
        break missingId;
      }

      id = R.id.tvAmountDesc;
      TextView tvAmountDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvAmountDesc == null) {
        break missingId;
      }

      id = R.id.tvPayment;
      TextView tvPayment = ViewBindings.findChildViewById(rootView, id);
      if (tvPayment == null) {
        break missingId;
      }

      id = R.id.tvPaymentId;
      TextView tvPaymentId = ViewBindings.findChildViewById(rootView, id);
      if (tvPaymentId == null) {
        break missingId;
      }

      id = R.id.tvServiceId;
      TextView tvServiceId = ViewBindings.findChildViewById(rootView, id);
      if (tvServiceId == null) {
        break missingId;
      }

      id = R.id.tvServiceIdDesc;
      TextView tvServiceIdDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvServiceIdDesc == null) {
        break missingId;
      }

      id = R.id.tvTime;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tvTimeDesc;
      TextView tvTimeDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvTimeDesc == null) {
        break missingId;
      }

      return new ClientPaymentDetailsBinding((DrawerLayout) rootView, backArrow, cardCategories,
          cardHeaders, greetingText, tvAmount, tvAmountDesc, tvPayment, tvPaymentId, tvServiceId,
          tvServiceIdDesc, tvTime, tvTimeDesc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
