// Generated by view binder compiler. Do not edit!
package com.example.petvet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.petvet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditServiceActivityBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView colorFrame;

  @NonNull
  public final ImageView serviceImage;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvCategory3;

  @NonNull
  public final TextView tvServiceName;

  private EditServiceActivityBinding(@NonNull CardView rootView, @NonNull CardView colorFrame,
      @NonNull ImageView serviceImage, @NonNull TextView tvCategory, @NonNull TextView tvCategory3,
      @NonNull TextView tvServiceName) {
    this.rootView = rootView;
    this.colorFrame = colorFrame;
    this.serviceImage = serviceImage;
    this.tvCategory = tvCategory;
    this.tvCategory3 = tvCategory3;
    this.tvServiceName = tvServiceName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static EditServiceActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditServiceActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_service_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditServiceActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.colorFrame;
      CardView colorFrame = ViewBindings.findChildViewById(rootView, id);
      if (colorFrame == null) {
        break missingId;
      }

      id = R.id.serviceImage;
      ImageView serviceImage = ViewBindings.findChildViewById(rootView, id);
      if (serviceImage == null) {
        break missingId;
      }

      id = R.id.tvCategory;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tvCategory3;
      TextView tvCategory3 = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory3 == null) {
        break missingId;
      }

      id = R.id.tvServiceName;
      TextView tvServiceName = ViewBindings.findChildViewById(rootView, id);
      if (tvServiceName == null) {
        break missingId;
      }

      return new EditServiceActivityBinding((CardView) rootView, colorFrame, serviceImage,
          tvCategory, tvCategory3, tvServiceName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
