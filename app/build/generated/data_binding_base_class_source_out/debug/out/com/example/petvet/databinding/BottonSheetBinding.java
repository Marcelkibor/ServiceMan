// Generated by view binder compiler. Do not edit!
package com.example.petvet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.petvet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottonSheetBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout ltMpesa;

  @NonNull
  public final LinearLayout ltPaypal;

  @NonNull
  public final LinearLayout ltSimulate;

  @NonNull
  public final TextView tvMpesa;

  @NonNull
  public final TextView tvPaypal;

  @NonNull
  public final TextView tvSimulate;

  private BottonSheetBinding(@NonNull CardView rootView, @NonNull LinearLayout ltMpesa,
      @NonNull LinearLayout ltPaypal, @NonNull LinearLayout ltSimulate, @NonNull TextView tvMpesa,
      @NonNull TextView tvPaypal, @NonNull TextView tvSimulate) {
    this.rootView = rootView;
    this.ltMpesa = ltMpesa;
    this.ltPaypal = ltPaypal;
    this.ltSimulate = ltSimulate;
    this.tvMpesa = tvMpesa;
    this.tvPaypal = tvPaypal;
    this.tvSimulate = tvSimulate;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static BottonSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottonSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.botton_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottonSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ltMpesa;
      LinearLayout ltMpesa = ViewBindings.findChildViewById(rootView, id);
      if (ltMpesa == null) {
        break missingId;
      }

      id = R.id.ltPaypal;
      LinearLayout ltPaypal = ViewBindings.findChildViewById(rootView, id);
      if (ltPaypal == null) {
        break missingId;
      }

      id = R.id.ltSimulate;
      LinearLayout ltSimulate = ViewBindings.findChildViewById(rootView, id);
      if (ltSimulate == null) {
        break missingId;
      }

      id = R.id.tvMpesa;
      TextView tvMpesa = ViewBindings.findChildViewById(rootView, id);
      if (tvMpesa == null) {
        break missingId;
      }

      id = R.id.tvPaypal;
      TextView tvPaypal = ViewBindings.findChildViewById(rootView, id);
      if (tvPaypal == null) {
        break missingId;
      }

      id = R.id.tvSimulate;
      TextView tvSimulate = ViewBindings.findChildViewById(rootView, id);
      if (tvSimulate == null) {
        break missingId;
      }

      return new BottonSheetBinding((CardView) rootView, ltMpesa, ltPaypal, ltSimulate, tvMpesa,
          tvPaypal, tvSimulate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
