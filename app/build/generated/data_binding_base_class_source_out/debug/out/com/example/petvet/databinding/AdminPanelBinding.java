// Generated by view binder compiler. Do not edit!
package com.example.petvet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.petvet.R;
import com.google.android.material.navigation.NavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminPanelBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final DrawerLayout adminDrawer;

  @NonNull
  public final FrameLayout adminFrame;

  @NonNull
  public final NavigationView adminNavBar;

  @NonNull
  public final ViewPager adminViewPager;

  @NonNull
  public final CardView cardAnalytics;

  @NonNull
  public final CardView cardClients;

  @NonNull
  public final CardView cardDocLists;

  @NonNull
  public final CardView cardHeader;

  @NonNull
  public final CardView cardPayments;

  @NonNull
  public final CardView cardRegisterDoc;

  @NonNull
  public final CardView cardRequests;

  @NonNull
  public final CardView cardShares;

  @NonNull
  public final ImageView drawerHome;

  @NonNull
  public final ImageView drawerIcon;

  @NonNull
  public final TextView greetingText;

  @NonNull
  public final FrameLayout ltAnalytics;

  @NonNull
  public final FrameLayout ltClients;

  @NonNull
  public final FrameLayout ltDocLists;

  @NonNull
  public final FrameLayout ltPayments;

  @NonNull
  public final FrameLayout ltRegisterDoc;

  @NonNull
  public final FrameLayout ltRequests;

  @NonNull
  public final FrameLayout ltShares;

  @NonNull
  public final TextView tvAnalytics;

  @NonNull
  public final TextView tvClients;

  @NonNull
  public final TextView tvMyDocLists;

  @NonNull
  public final TextView tvPayments;

  @NonNull
  public final TextView tvRegisterDoc;

  @NonNull
  public final TextView tvRequests;

  @NonNull
  public final TextView tvShares;

  private AdminPanelBinding(@NonNull DrawerLayout rootView, @NonNull DrawerLayout adminDrawer,
      @NonNull FrameLayout adminFrame, @NonNull NavigationView adminNavBar,
      @NonNull ViewPager adminViewPager, @NonNull CardView cardAnalytics,
      @NonNull CardView cardClients, @NonNull CardView cardDocLists, @NonNull CardView cardHeader,
      @NonNull CardView cardPayments, @NonNull CardView cardRegisterDoc,
      @NonNull CardView cardRequests, @NonNull CardView cardShares, @NonNull ImageView drawerHome,
      @NonNull ImageView drawerIcon, @NonNull TextView greetingText,
      @NonNull FrameLayout ltAnalytics, @NonNull FrameLayout ltClients,
      @NonNull FrameLayout ltDocLists, @NonNull FrameLayout ltPayments,
      @NonNull FrameLayout ltRegisterDoc, @NonNull FrameLayout ltRequests,
      @NonNull FrameLayout ltShares, @NonNull TextView tvAnalytics, @NonNull TextView tvClients,
      @NonNull TextView tvMyDocLists, @NonNull TextView tvPayments, @NonNull TextView tvRegisterDoc,
      @NonNull TextView tvRequests, @NonNull TextView tvShares) {
    this.rootView = rootView;
    this.adminDrawer = adminDrawer;
    this.adminFrame = adminFrame;
    this.adminNavBar = adminNavBar;
    this.adminViewPager = adminViewPager;
    this.cardAnalytics = cardAnalytics;
    this.cardClients = cardClients;
    this.cardDocLists = cardDocLists;
    this.cardHeader = cardHeader;
    this.cardPayments = cardPayments;
    this.cardRegisterDoc = cardRegisterDoc;
    this.cardRequests = cardRequests;
    this.cardShares = cardShares;
    this.drawerHome = drawerHome;
    this.drawerIcon = drawerIcon;
    this.greetingText = greetingText;
    this.ltAnalytics = ltAnalytics;
    this.ltClients = ltClients;
    this.ltDocLists = ltDocLists;
    this.ltPayments = ltPayments;
    this.ltRegisterDoc = ltRegisterDoc;
    this.ltRequests = ltRequests;
    this.ltShares = ltShares;
    this.tvAnalytics = tvAnalytics;
    this.tvClients = tvClients;
    this.tvMyDocLists = tvMyDocLists;
    this.tvPayments = tvPayments;
    this.tvRegisterDoc = tvRegisterDoc;
    this.tvRequests = tvRequests;
    this.tvShares = tvShares;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminPanelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminPanelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_panel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminPanelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      DrawerLayout adminDrawer = (DrawerLayout) rootView;

      id = R.id.admin_frame;
      FrameLayout adminFrame = ViewBindings.findChildViewById(rootView, id);
      if (adminFrame == null) {
        break missingId;
      }

      id = R.id.adminNavBar;
      NavigationView adminNavBar = ViewBindings.findChildViewById(rootView, id);
      if (adminNavBar == null) {
        break missingId;
      }

      id = R.id.admin_view_pager;
      ViewPager adminViewPager = ViewBindings.findChildViewById(rootView, id);
      if (adminViewPager == null) {
        break missingId;
      }

      id = R.id.cardAnalytics;
      CardView cardAnalytics = ViewBindings.findChildViewById(rootView, id);
      if (cardAnalytics == null) {
        break missingId;
      }

      id = R.id.cardClients;
      CardView cardClients = ViewBindings.findChildViewById(rootView, id);
      if (cardClients == null) {
        break missingId;
      }

      id = R.id.cardDocLists;
      CardView cardDocLists = ViewBindings.findChildViewById(rootView, id);
      if (cardDocLists == null) {
        break missingId;
      }

      id = R.id.cardHeader;
      CardView cardHeader = ViewBindings.findChildViewById(rootView, id);
      if (cardHeader == null) {
        break missingId;
      }

      id = R.id.cardPayments;
      CardView cardPayments = ViewBindings.findChildViewById(rootView, id);
      if (cardPayments == null) {
        break missingId;
      }

      id = R.id.cardRegisterDoc;
      CardView cardRegisterDoc = ViewBindings.findChildViewById(rootView, id);
      if (cardRegisterDoc == null) {
        break missingId;
      }

      id = R.id.cardRequests;
      CardView cardRequests = ViewBindings.findChildViewById(rootView, id);
      if (cardRequests == null) {
        break missingId;
      }

      id = R.id.cardShares;
      CardView cardShares = ViewBindings.findChildViewById(rootView, id);
      if (cardShares == null) {
        break missingId;
      }

      id = R.id.drawer_home;
      ImageView drawerHome = ViewBindings.findChildViewById(rootView, id);
      if (drawerHome == null) {
        break missingId;
      }

      id = R.id.drawer_icon;
      ImageView drawerIcon = ViewBindings.findChildViewById(rootView, id);
      if (drawerIcon == null) {
        break missingId;
      }

      id = R.id.greetingText;
      TextView greetingText = ViewBindings.findChildViewById(rootView, id);
      if (greetingText == null) {
        break missingId;
      }

      id = R.id.ltAnalytics;
      FrameLayout ltAnalytics = ViewBindings.findChildViewById(rootView, id);
      if (ltAnalytics == null) {
        break missingId;
      }

      id = R.id.ltClients;
      FrameLayout ltClients = ViewBindings.findChildViewById(rootView, id);
      if (ltClients == null) {
        break missingId;
      }

      id = R.id.ltDocLists;
      FrameLayout ltDocLists = ViewBindings.findChildViewById(rootView, id);
      if (ltDocLists == null) {
        break missingId;
      }

      id = R.id.ltPayments;
      FrameLayout ltPayments = ViewBindings.findChildViewById(rootView, id);
      if (ltPayments == null) {
        break missingId;
      }

      id = R.id.ltRegisterDoc;
      FrameLayout ltRegisterDoc = ViewBindings.findChildViewById(rootView, id);
      if (ltRegisterDoc == null) {
        break missingId;
      }

      id = R.id.ltRequests;
      FrameLayout ltRequests = ViewBindings.findChildViewById(rootView, id);
      if (ltRequests == null) {
        break missingId;
      }

      id = R.id.ltShares;
      FrameLayout ltShares = ViewBindings.findChildViewById(rootView, id);
      if (ltShares == null) {
        break missingId;
      }

      id = R.id.tvAnalytics;
      TextView tvAnalytics = ViewBindings.findChildViewById(rootView, id);
      if (tvAnalytics == null) {
        break missingId;
      }

      id = R.id.tvClients;
      TextView tvClients = ViewBindings.findChildViewById(rootView, id);
      if (tvClients == null) {
        break missingId;
      }

      id = R.id.tvMyDocLists;
      TextView tvMyDocLists = ViewBindings.findChildViewById(rootView, id);
      if (tvMyDocLists == null) {
        break missingId;
      }

      id = R.id.tvPayments;
      TextView tvPayments = ViewBindings.findChildViewById(rootView, id);
      if (tvPayments == null) {
        break missingId;
      }

      id = R.id.tvRegisterDoc;
      TextView tvRegisterDoc = ViewBindings.findChildViewById(rootView, id);
      if (tvRegisterDoc == null) {
        break missingId;
      }

      id = R.id.tvRequests;
      TextView tvRequests = ViewBindings.findChildViewById(rootView, id);
      if (tvRequests == null) {
        break missingId;
      }

      id = R.id.tvShares;
      TextView tvShares = ViewBindings.findChildViewById(rootView, id);
      if (tvShares == null) {
        break missingId;
      }

      return new AdminPanelBinding((DrawerLayout) rootView, adminDrawer, adminFrame, adminNavBar,
          adminViewPager, cardAnalytics, cardClients, cardDocLists, cardHeader, cardPayments,
          cardRegisterDoc, cardRequests, cardShares, drawerHome, drawerIcon, greetingText,
          ltAnalytics, ltClients, ltDocLists, ltPayments, ltRegisterDoc, ltRequests, ltShares,
          tvAnalytics, tvClients, tvMyDocLists, tvPayments, tvRegisterDoc, tvRequests, tvShares);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
